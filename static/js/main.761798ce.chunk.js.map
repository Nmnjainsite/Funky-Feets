{"version":3,"sources":["pages/women.jpg","pages/img2.jpg","pages/red.jpg","pages/air.jpg","pages/crocs.jpg","pages/crocs-men.jpg","pages/adidas.jpg","pages/sports.jpg","pages/sneakers.jpg","pages/home.jsx","pages/product.jsx","App.js","backend/utils/authUtils.js","backend/controllers/AddressController.js","backend/controllers/AuthController.js","backend/controllers/CartController.js","backend/controllers/CategoryController.js","backend/controllers/CouponController.js","backend/controllers/ProductController.js","backend/controllers/WishlistController.js","backend/db/categories.js","backend/db/products.js","backend/db/users.js","server.js","index.js"],"names":["Home","className","placeholder","id","src","red","img2","crocs","crocsMen","air","style","textAlign","women","adidas","sports","marginBottom","width","href","useState","data","setData","loader","setLoader","useEffect","a","axios","get","getData","products","console","error","to","map","img","name","price","App","path","element","requiresAuth","request","encodedToken","requestHeaders","authorization","decodedToken","jwt_decode","process","REACT_APP_JWT_SECRET","user","this","db","users","findBy","email","_id","Response","errors","formatDate","dayjs","format","getAllAddressesHandler","schema","userId","call","userAddresses","address","addNewAddressHandler","JSON","parse","requestBody","push","createdAt","updatedAt","uuid","update","removeAddressHandler","addressId","params","filter","item","sign","require","signupHandler","password","rest","newUser","cart","wishlist","createdUser","create","loginHandler","foundUser","undefined","getCartItemsHandler","userCart","addItemToCartHandler","product","qty","removeItemFromCartHandler","productId","updateCartItemHandler","action","type","forEach","getAllCategoriesHandler","categories","getCategoryHandler","categoryId","category","getAllCouponsHandler","coupons","getAllProductsHandler","getProductHandler","getWishlistItemsHandler","userWishlist","addItemToWishlistHandler","removeItemFromWishlistHandler","categoryName","description","firstName","lastName","environment","Server","serializers","application","RestSerializer","models","Model","seeds","server","logging","routes","namespace","post","bind","delete","makeServer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.761798ce.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/women.209dfb0f.jpg\";","export default __webpack_public_path__ + \"static/media/img2.5cea9a84.jpg\";","export default __webpack_public_path__ + \"static/media/red.a2cc35e6.jpg\";","export default __webpack_public_path__ + \"static/media/air.feb21f56.jpg\";","export default __webpack_public_path__ + \"static/media/crocs.8a1bbeea.jpg\";","export default __webpack_public_path__ + \"static/media/crocs-men.c65b36cc.jpg\";","export default __webpack_public_path__ + \"static/media/adidas.fa106338.jpg\";","export default __webpack_public_path__ + \"static/media/sports.57a63ac8.jpg\";","export default __webpack_public_path__ + \"static/media/sneakers.35a389a7.jpg\";","import React from \"react\"\r\nimport \"./home.css\"\r\nimport women from './women.jpg';\r\nimport img2 from \"./img2.jpg\";\r\nimport red from './red.jpg';\r\nimport air from \"./air.jpg\";\r\nimport crocs from \"./crocs.jpg\";\r\nimport crocsMen from './crocs-men.jpg';\r\nimport adidas from './adidas.jpg';\r\nimport sneakers from './sneakers.jpg';\r\nimport sports from './sports.jpg';\r\nimport { BsFillCartFill,BsFillHeartFill,BsGithub,BsTwitter,BsInstagram,BsLinkedin } from \"react-icons/bs\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Home (){\r\n\r\n    return (\r\n        <div className=\"App\">\r\n          {/*-------------header-------------- */}\r\n          <div className=\"title-container\">\r\n          <h1 className=\"title\">Funky Feet</h1>\r\n       \r\n          <div className=\"item-container\">\r\n          <input className=\"input\" placeholder=\"serach your category or brand\"></input>\r\n          <div className=\"badge-icons\">\r\n        <BsFillCartFill></BsFillCartFill>\r\n        <div className=\"number\">2</div>\r\n           </div>\r\n        <div className=\"badge-icons-2\">\r\n        <BsFillHeartFill></BsFillHeartFill>\r\n        <div className=\"number-2\">2</div>\r\n          </div>\r\n          </div>\r\n          <div className=\"right-nav\">\r\n        Hi,User\r\n        <button className=\"btn-right\">Login</button>\r\n        </div>\r\n          </div>\r\n          \r\n       \r\n         {/* --------typography------------- */}\r\n         <div className=\"description-container\">\r\n          <h4 className=\"description\">       \r\n        Casual shoes for the Friday look you need this season - \"To impress others you need big brands, to express a good pair is enough\"</h4>\r\n       \r\n        <button id=\"btn\">Shop Now</button>\r\n         <img src={red}className=\"img-2\"></img>\r\n       <img src={img2} className=\"img\"></img>\r\n        </div>\r\n       \r\n       \r\n       {/* ---------------------crocs cards---------------- */}\r\n        <div className=\"horizontal-card\">\r\n        \r\n          <img src={crocs} className=\"horizontal-img\"></img>\r\n          <h2 className=\"card-typography\"> Graceful and Charming</h2>\r\n          <p className=\"card-typography\">\r\n           Multiply the grace and charm you possess with footwear for her that enhances your style to the core. \"Give a girl the right shoes and she can conqure the world\"\r\n                     </p>\r\n                     <button className=\"card-btn\">Shop Women Casuals</button>\r\n        </div>\r\n           \r\n           <div className=\"crocs-card\">\r\n           \r\n           <img src={crocsMen} className=\"crocs-img\"></img>\r\n           <h2 className=\"card-typography\">Time to be LAZY! </h2>\r\n        \r\n           <p className=\"card-typography\">\r\nCrocs: The Only Way to Combat Sand in Your Shoes Is to Wear Crocs. Prefect for the lazy summer afternoons.</p>\r\n<button className=\"crocs-btn\">Shop Men Casuals</button>\r\n           </div>\r\n          \r\n{/* --------------------responsive image----------------- */}\r\n\r\n          <div className=\"full-screen-card\">\r\n          <img src={air} className=\"full-screen-img\"></img>\r\n          <h1 className=\"full-screen-typo\">The \"EVERY DAY\" Casuals</h1>\r\n          <p style={{textAlign:\"center\"}}>Feeling bold? Complete that look. Our \"Every Day\" casuals are designed to complete any look this season.</p>\r\n          </div>\r\n\r\n          <img src=\"https://img.freepik.com/premium-psd/banner-sport-s…facebook-web-banner-template_70055-853.jpg?w=2000\" className=\"offer-template\"></img>\r\n\r\n          {/* ----------------add to cart cards------------------------- */}\r\n       \r\n           <div className=\"trending-items\">\r\n           <h1 >Trending Items</h1>\r\n\r\n            <div className=\"formal-shoes\">\r\n            <img src={women} className=\"trending-pics\"></img>\r\n            <p className=\"brand-name\">Lee Cooper</p>\r\n            <button className=\"btn-formal\">Add To Cart</button>\r\n            </div>\r\n\r\n            <div className=\"adidas-shoes\">\r\n            <img src={adidas} className=\"trending-pics\"></img>\r\n            <p className=\"brand-name\">adidas</p>\r\n            <button className=\"btn-formal\">Add To Cart</button>\r\n            </div>\r\n\r\n            <div className=\"sports-shoes\">\r\n            <img src={sports} className=\"trending-pics\"></img>\r\n            <p className=\"brand-name\">Puma</p>\r\n            <button className=\"btn-formal\">Add To Cart</button>\r\n           \r\n            </div>\r\n            {/* <div className=\"sneakers-shoes\">\r\n            <img src={sneakers} className=\"trending-pics\"></img>\r\n            <p className=\"brand-name\">\r\n                      Nike</p>\r\n            <button className=\"btn-formal\">Add To Cart</button>\r\n            </div>  */}\r\n\r\n           </div>\r\n            \r\n\r\n            <hr style={{marginBottom:\"5rem\",width:\"80%\"}}/>\r\n\r\n            {/* -------------footer------------------------- */}\r\n          \r\n           <footer className=\"footer\">\r\n           <p>© Funky Feet 2022. All rights reserved. Site – Managed by Naman Jain .</p>\r\n\r\n            <a href=\"https://github.com/Nmnjainsite\">\r\n            <BsGithub></BsGithub></a>\r\n            <a href=\"https://www.linkedin.com/in/naman-jain-97382b231/\"><BsLinkedin></BsLinkedin></a>\r\n            <a href=\"https://twitter.com/NamanJa83726591\"><BsTwitter></BsTwitter></a>\r\n            <a href=\"https://www.instagram.com/namanjain_321/\"><BsInstagram></BsInstagram></a>\r\n            \r\n            </footer>\r\n        </div>\r\n        )\r\n\r\n}","import React from \"react\"\r\nimport {useEffect,useState} from \"react\"\r\nimport axios from 'axios';\r\nimport {Link} from 'react-router-dom'\r\nexport default function Home (){\r\n    const [data,setData] = useState([]);\r\n    const [loader,setLoader] = useState(true);\r\n  \r\n  \r\nuseEffect(() => {\r\n    (async() => {  try {\r\n      const getData = await axios.get(\"/api/products\")\r\n            setLoader(false);\r\n            setData(getData.data.products);\r\n          ;\r\n       } catch (error) {\r\n        console.error(\"error occured\")\r\n       }})()\r\n  }, []);\r\n\r\n//   useEffect(() => {\r\n//     (async() => {  \r\n//         try {\r\n//       const getCategory = await axios.get(\"/api/categories\")\r\n//             setLoader(false);\r\n//             setData(getCategory.data.categories);\r\n//        } catch (error) {\r\n//         console.error(\"error occured\")\r\n//        }})()\r\n//   }, []);\r\n\r\n\r\n    return (\r\n       <div className=\"App\">\r\n           <h1> Showcase Products </h1>\r\n      {loader && <div>Getting Data...</div>}\r\n\r\n     \r\n      <Link to=\"/Products\">Product </Link> \r\n\r\n      <div> {data && data.map(  (data)  => <li key={data.name}>\r\n      <img src={data.img} key={data.img} style={{width:\"10%\"}}></img>\r\n        {data.name }\r\n        {data.price} \r\n      \r\n      </li>)} </div> \r\n\r\n       </div>\r\n    )\r\n}\r\n\r\n","import \"./index.css\";\nimport Home from \"./pages/home\";\nimport Products from \"./pages/product\";\nimport { Link, Routes, Route } from \"react-router-dom\";\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <nav>\n        <Link to=\"/home\">Home </Link> ||\n         <Link to = \"/Products\">Product</Link>\n      </nav>\n       \n      <Routes>\n        <Route path=\"/home\" element={<Home/>} />\n        <Route path =\"/Products\" element={<Products/>} />\n      </Routes>\n\n      \n    </div>\n  );\n}\n\n\n\n","import { Response } from \"miragejs\";\nimport dayjs from \"dayjs\";\nimport jwt_decode from \"jwt-decode\";\n\nexport const requiresAuth = function (request) {\n  const encodedToken = request.requestHeaders.authorization;\n  const decodedToken = jwt_decode(\n    encodedToken,\n    process.env.REACT_APP_JWT_SECRET\n  );\n  if (decodedToken) {\n    const user = this.db.users.findBy({ email: decodedToken.email });\n    if (user) {\n      return user._id;\n    }\n  }\n  return new Response(\n    401,\n    {},\n    { errors: [\"The token is invalid. Unauthorized access error.\"] }\n  );\n};\n\nexport const formatDate = () => dayjs().format(\"YYYY-MM-DDTHH:mm:ssZ\");\n","import { Response } from \"miragejs\";\nimport { formatDate, requiresAuth } from \"../utils/authUtils\";\nimport { v4 as uuid } from \"uuid\";\n/**\n * All the routes related to Address are present here.\n * These are private routes.\n * Client needs to add \"authorization\" header with JWT token in it to access it.\n * */\n\n/**\n * This handler handles getting all addresses from user.\n * send GET Request at /api/user/addresses\n * */\n\nexport const getAllAddressesHandler = function (schema, request) {\n  const userId = requiresAuth.call(this, request);\n  if (!userId) {\n    new Response(\n      404,\n      {},\n      {\n        errors: [\"The email you entered is not Registered. Not Found error\"],\n      }\n    );\n  }\n  const userAddresses = schema.users.findBy({ _id: userId }).address;\n  return new Response(200, {}, { address: userAddresses });\n};\n\n/**\n * This handler handles adding an address to user.\n * send POST Request at /api/user/address\n * body contains { address }\n * */\n\nexport const addNewAddressHandler = function (schema, request) {\n  const userId = requiresAuth.call(this, request);\n  try {\n    if (!userId) {\n      new Response(\n        404,\n        {},\n        {\n          errors: [\"The email you entered is not Registered. Not Found error\"],\n        }\n      );\n    }\n    const userAddresses = schema.users.findBy({ _id: userId }).address;\n    const { address } = JSON.parse(request.requestBody);\n   \n    userAddresses.push({\n      address,\n      createdAt: formatDate(),\n      updatedAt: formatDate(),\n      _id: uuid(),\n    });\n    this.db.users.update({ _id: userId }, { address: userAddresses });\n    return new Response(201, {}, { address: userAddresses });\n  } catch (error) {\n    return new Response(\n      500,\n      {},\n      {\n        error,\n      }\n    );\n  }\n};\n\n/**\n * This handler handles removing an address from user.\n * send DELETE Request at /api/user/address/:addressId\n *\n * */\n\nexport const removeAddressHandler = function (schema, request) {\n  const userId = requiresAuth.call(this, request);\n  try {\n    if (!userId) {\n      new Response(\n        404,\n        {},\n        {\n          errors: [\"The email you entered is not Registered. Not Found error\"],\n        }\n      );\n    }\n    let userAddresses = schema.users.findBy({ _id: userId }).address;\n    const addressId = request.params.addressId;\n    userAddresses = userAddresses.filter((item) => item._id !== addressId);\n    this.db.users.update({ _id: userId }, { address: userAddresses });\n    return new Response(200, {}, { address: userAddresses });\n  } catch (error) {\n    return new Response(\n      500,\n      {},\n      {\n        error,\n      }\n    );\n  }\n};\n","import { v4 as uuid } from \"uuid\";\nimport { Response } from \"miragejs\";\nimport { formatDate } from \"../utils/authUtils\";\nconst sign = require(\"jwt-encode\");\n/**\n * All the routes related to Auth are present here.\n * These are Publicly accessible routes.\n * */\n\n/**\n * This handler handles user signups.\n * send POST Request at /api/auth/signup\n * body contains {firstName, lastName, email, password}\n * */\n\nexport const signupHandler = function (schema, request) {\n  const { email, password, ...rest } = JSON.parse(request.requestBody);\n  try {\n    // check if email already exists\n    const foundUser = schema.users.findBy({ email });\n    if (foundUser) {\n      return new Response(\n        422,\n        {},\n        {\n          errors: [\"Unprocessable Entity. Email Already Exists.\"],\n        }\n      );\n    }\n    const _id = uuid();\n    const newUser = {\n      _id,\n      email,\n      password,\n      createdAt: formatDate(),\n      updatedAt: formatDate(),\n      ...rest,\n      cart: [],\n      wishlist: [],\n      address: [],\n    };\n    const createdUser = schema.users.create(newUser);\n    const encodedToken = sign({ _id, email }, process.env.REACT_APP_JWT_SECRET);\n    return new Response(201, {}, { createdUser, encodedToken });\n  } catch (error) {\n    return new Response(\n      500,\n      {},\n      {\n        error,\n      }\n    );\n  }\n};\n\n/**\n * This handler handles user login.\n * send POST Request at /api/auth/login\n * body contains {email, password}\n * */\n\nexport const loginHandler = function (schema, request) {\n  const { email, password } = JSON.parse(request.requestBody);\n  try {\n    const foundUser = schema.users.findBy({ email });\n    if (!foundUser) {\n      return new Response(\n        404,\n        {},\n        { errors: [\"The email you entered is not Registered. Not Found error\"] }\n      );\n    }\n    if (password === foundUser.password) {\n      const encodedToken = sign(\n        { _id: foundUser._id, email },\n        process.env.REACT_APP_JWT_SECRET\n      );\n      foundUser.password = undefined;\n      return new Response(200, {}, { foundUser, encodedToken });\n    }\n    return new Response(\n      401,\n      {},\n      {\n        errors: [\n          \"The credentials you entered are invalid. Unauthorized access error.\",\n        ],\n      }\n    );\n  } catch (error) {\n    return new Response(\n      500,\n      {},\n      {\n        error,\n      }\n    );\n  }\n};\n","import { Response } from \"miragejs\";\nimport { formatDate, requiresAuth } from \"../utils/authUtils\";\n\n/**\n * All the routes related to Cart are present here.\n * These are private routes.\n * Client needs to add \"authorization\" header with JWT token in it to access it.\n * */\n\n/**\n * This handler handles getting items to user's cart.\n * send GET Request at /api/user/cart\n * */\nexport const getCartItemsHandler = function (schema, request) {\n  const userId = requiresAuth.call(this, request);\n  if (!userId) {\n    return new Response(\n      404,\n      {},\n      {\n        errors: [\"The email you entered is not Registered. Not Found error\"],\n      }\n    );\n  }\n  const userCart = schema.users.findBy({ _id: userId }).cart;\n  return new Response(200, {}, { cart: userCart });\n};\n\n/**\n * This handler handles adding items to user's cart.\n * send POST Request at /api/user/cart\n * body contains {product}\n * */\n\nexport const addItemToCartHandler = function (schema, request) {\n  const userId = requiresAuth.call(this, request);\n  try {\n    if (!userId) {\n      return new Response(\n        404,\n        {},\n        {\n          errors: [\"The email you entered is not Registered. Not Found error\"],\n        }\n      );\n    }\n    const userCart = schema.users.findBy({ _id: userId }).cart;\n    const { product } = JSON.parse(request.requestBody);\n    userCart.push({\n      ...product,\n      createdAt: formatDate(),\n      updatedAt: formatDate(),\n      qty: 1,\n    });\n    this.db.users.update({ _id: userId }, { cart: userCart });\n    return new Response(201, {}, { cart: userCart });\n  } catch (error) {\n    return new Response(\n      500,\n      {},\n      {\n        error,\n      }\n    );\n  }\n};\n\n/**\n * This handler handles removing items to user's cart.\n * send DELETE Request at /api/user/cart/:productId\n * */\n\nexport const removeItemFromCartHandler = function (schema, request) {\n  const userId = requiresAuth.call(this, request);\n  try {\n    if (!userId) {\n      return new Response(\n        404,\n        {},\n        {\n          errors: [\"The email you entered is not Registered. Not Found error\"],\n        }\n      );\n    }\n    let userCart = schema.users.findBy({ _id: userId }).cart;\n    const productId = request.params.productId;\n    userCart = userCart.filter((item) => item._id !== productId);\n    this.db.users.update({ _id: userId }, { cart: userCart });\n    return new Response(200, {}, { cart: userCart });\n  } catch (error) {\n    return new Response(\n      500,\n      {},\n      {\n        error,\n      }\n    );\n  }\n};\n\n/**\n * This handler handles adding items to user's cart.\n * send POST Request at /api/user/cart/:productId\n * body contains {action} (whose 'type' can be increment or decrement)\n * */\n\nexport const updateCartItemHandler = function (schema, request) {\n  const productId = request.params.productId;\n  const userId = requiresAuth.call(this, request);\n  try {\n    if (!userId) {\n      return new Response(\n        404,\n        {},\n        {\n          errors: [\"The email you entered is not Registered. Not Found error\"],\n        }\n      );\n    }\n    const userCart = schema.users.findBy({ _id: userId }).cart;\n    const { action } = JSON.parse(request.requestBody);\n    if (action.type === \"increment\") {\n      userCart.forEach((product) => {\n        if (product._id === productId) {\n          product.qty += 1;\n          product.updatedAt = formatDate();\n        }\n      });\n    } else if (action.type === \"decrement\") {\n      userCart.forEach((product) => {\n        if (product._id === productId) {\n          product.qty -= 1;\n          product.updatedAt = formatDate();\n        }\n      });\n    }\n    this.db.users.update({ _id: userId }, { cart: userCart });\n    return new Response(200, {}, { cart: userCart });\n  } catch (error) {\n    return new Response(\n      500,\n      {},\n      {\n        error,\n      }\n    );\n  }\n};\n","import { Response } from \"miragejs\";\n\n/**\n * All the routes related to Category are present here.\n * These are Publicly accessible routes.\n * */\n\n/**\n * This handler handles gets all categories in the db.\n * send GET Request at /api/categories\n * */\n\nexport const getAllCategoriesHandler = function () {\n  try {\n    return new Response(200, {}, { categories: this.db.categories });\n  } catch (error) {\n    return new Response(\n      500,\n      {},\n      {\n        error,\n      }\n    );\n  }\n};\n\n/**\n * This handler handles gets all categories in the db.\n * send GET Request at /api/user/category/:categoryId\n * */\n\nexport const getCategoryHandler = function (schema, request) {\n  const categoryId = request.params.categoryId;\n  try {\n    const category = schema.categories.findBy({ _id: categoryId });\n    return new Response(200, {}, { category });\n  } catch (error) {\n    return new Response(\n      500,\n      {},\n      {\n        error,\n      }\n    );\n  }\n};\n","import { Response } from \"miragejs\";\n\n/**\n * All the routes related to Coupons are present here.\n * These are Publicly accessible routes.\n * */\n\n/**\n * This handler handles gets all coupons in the db.\n * send GET Request at /api/coupon\n * */\n\nexport const getAllCouponsHandler = function () {\n  return new Response(200, {}, { coupons: this.db.coupons });\n};\n","import { Response } from \"miragejs\";\n\n/**\n * All the routes related to Product are present here.\n * These are Publicly accessible routes.\n * */\n\n/**\n * This handler handles gets all products in the db.\n * send GET Request at /api/products\n * */\n\nexport const getAllProductsHandler = function () {\n  return new Response(200, {}, { products: this.db.products });\n};\n\n/**\n * This handler handles gets all products in the db.\n * send GET Request at /api/user/products/:productId\n * */\n\nexport const getProductHandler = function (schema, request) {\n  const productId = request.params.productId;\n  try {\n    const product = schema.products.findBy({ _id: productId });\n    return new Response(200, {}, { product });\n  } catch (error) {\n    return new Response(\n      500,\n      {},\n      {\n        error,\n      }\n    );\n  }\n};\n","import { Response } from \"miragejs\";\nimport { formatDate, requiresAuth } from \"../utils/authUtils\";\n\n/**\n * All the routes related to Wishlist are present here.\n * These are private routes.\n * Client needs to add \"authorization\" header with JWT token in it to access it.\n * */\n\n/**\n * This handler handles getting items to user's wishlist.\n * send GET Request at /api/user/wishlist\n * */\n\nexport const getWishlistItemsHandler = function (schema, request) {\n  const userId = requiresAuth.call(this, request);\n  if (!userId) {\n    return new Response(\n      404,\n      {},\n      {\n        errors: [\"The email you entered is not Registered. Not Found error\"],\n      }\n    );\n  }\n  const userWishlist = schema.users.findBy({ _id: userId }).wishlist;\n  return new Response(200, {}, { wishlist: userWishlist });\n};\n\n/**\n * This handler handles adding items to user's wishlist.\n * send POST Request at /api/user/wishlist\n * body contains {product}\n * */\n\nexport const addItemToWishlistHandler = function (schema, request) {\n  const userId = requiresAuth.call(this, request);\n  try {\n    if (!userId) {\n      return new Response(\n        404,\n        {},\n        {\n          errors: [\"The email you entered is not Registered. Not Found error\"],\n        }\n      );\n    }\n    const userWishlist = schema.users.findBy({ _id: userId }).wishlist;\n    const { product } = JSON.parse(request.requestBody);\n    userWishlist.push({\n      ...product,\n      createdAt: formatDate(),\n      updatedAt: formatDate(),\n    });\n    this.db.users.update({ _id: userId }, { wishlist: userWishlist });\n    return new Response(201, {}, { wishlist: userWishlist });\n  } catch (error) {\n    return new Response(\n      500,\n      {},\n      {\n        error,\n      }\n    );\n  }\n};\n\n/**\n * This handler handles removing items to user's wishlist.\n * send DELETE Request at /api/user/wishlist\n * body contains {product}\n * */\n\nexport const removeItemFromWishlistHandler = function (schema, request) {\n  const userId = requiresAuth.call(this, request);\n  try {\n    if (!userId) {\n      return new Response(\n        404,\n        {},\n        {\n          errors: [\"The email you entered is not Registered. Not Found error\"],\n        }\n      );\n    }\n    let userWishlist = schema.users.findBy({ _id: userId }).wishlist;\n    const productId = request.params.productId;\n    userWishlist = userWishlist.filter((item) => item._id !== productId);\n    this.db.users.update({ _id: userId }, { wishlist: userWishlist });\n    return new Response(200, {}, { wishlist: userWishlist });\n  } catch (error) {\n    return new Response(\n      500,\n      {},\n      {\n        error,\n      }\n    );\n  }\n};\n","import { v4 as uuid } from \"uuid\";\n\n/**\n * Category Database can be added here.\n * You can add category of your wish with different attributes\n * */\n\nexport const categories = [\n  {\n    _id: uuid(),\n    categoryName: \"Boots\",\n    description:\n      \"Pure Leather Boots\",\n  },\n  {\n    _id: uuid(),\n    categoryName: \"Formal\",\n    description:\n      \"Hello\",\n  },\n  {\n    _id: uuid(),\n    categoryName: \"Fancy\",\n    description:\n      \"Hy\",\n  },\n  {\n    _id: uuid(),\n    categoryName: \"Sport\",\n    description:\n      \"Bye\",\n  },\n];\n","import { v4 as uuid } from \"uuid\";\n\n/**\n * Product Database can be added here.\n * You can add products of your wish with different attributes\n * */\n\nexport const products = [\n  {\n    _id: uuid(),\n   name: \"Red Chief\",\n    price: \"5000\",\n   \n    categoryName: \"Boots\",\n  },\n  {\n    _id: uuid(),\n   name: \"Air Max\",\n    price: \"3000\",\n    img: 'https://m.media-amazon.com/images/I/81opGKIBKbL._UX500_.jpg',\n    categoryName: \"Formal\",\n  },\n  {\n    _id: uuid(),\n    name: \"adidas\",\n    \n    price: \"1000\",\n    img: 'https://m.media-amazon.com/images/I/81opGKIBKbL._UX500_.jpg',\n    categoryName: \"Formal\",\n    \n  },\n  {\n    _id: uuid(),\n    name: \"Lee Cooper\",\n    price: \"1000\",\n    img: 'https://images.pexels.com/photos/2529147/pexels-ph…jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1',\n    categoryName: \"Sport\",\n  },\n];\n","import { v4 as uuid } from \"uuid\";\nimport { formatDate } from \"../utils/authUtils\";\n/**\n * User Database can be added here.\n * You can add default users of your wish with different attributes\n * Every user will have cart (Quantity of all Products in Cart is set to 1 by default), wishList by default\n * */\n\nexport const users = [\n  {\n    _id: uuid(),\n    firstName: \"Adarsh\",\n    lastName: \"Balika\",\n    email: \"adarshbalika@gmail.com\",\n    password: \"adarshbalika\",\n    createdAt: formatDate(),\n    updatedAt: formatDate(),\n  },\n];\n","import { Server, Model, RestSerializer } from \"miragejs\";\nimport {\n  addNewAddressHandler,\n  getAllAddressesHandler,\n  removeAddressHandler,\n} from \"./backend/controllers/AddressController\";\nimport {\n  loginHandler,\n  signupHandler,\n} from \"./backend/controllers/AuthController\";\nimport {\n  addItemToCartHandler,\n  getCartItemsHandler,\n  removeItemFromCartHandler,\n  updateCartItemHandler,\n} from \"./backend/controllers/CartController\";\nimport {\n  getAllCategoriesHandler,\n  getCategoryHandler,\n} from \"./backend/controllers/CategoryController\";\nimport { getAllCouponsHandler } from \"./backend/controllers/CouponController\";\nimport {\n  getAllProductsHandler,\n  getProductHandler,\n} from \"./backend/controllers/ProductController\";\nimport {\n  addItemToWishlistHandler,\n  getWishlistItemsHandler,\n  removeItemFromWishlistHandler,\n} from \"./backend/controllers/WishlistController\";\nimport { categories } from \"./backend/db/categories\";\nimport { products } from \"./backend/db/products\";\nimport { users } from \"./backend/db/users\";\n\nexport function makeServer({ environment = \"development\" } = {}) {\n  return new Server({\n    serializers: {\n      application: RestSerializer,\n    },\n    environment,\n    models: {\n      product: Model,\n      category: Model,\n      user: Model,\n      cart: Model,\n      wishlist: Model,\n      address: Model,\n    },\n\n    // Runs on the start of the server\n    seeds(server) {\n      // disballing console logs from Mirage\n      server.logging = false;\n      products.forEach((item) => {\n        server.create(\"product\", { ...item });\n      });\n\n      users.forEach((item) =>\n        server.create(\"user\", { ...item, cart: [], wishlist: [] })\n      );\n\n      categories.forEach((item) => server.create(\"category\", { ...item }));\n    },\n\n    routes() {\n      this.namespace = \"api\";\n      // auth routes (public)\n      this.post(\"/auth/signup\", signupHandler.bind(this));\n      this.post(\"/auth/login\", loginHandler.bind(this));\n\n      // products routes (public)\n      this.get(\"/products\", getAllProductsHandler.bind(this));\n      this.get(\"/products/:productId\", getProductHandler.bind(this));\n\n      // categories routes (public)\n      this.get(\"/categories\", getAllCategoriesHandler.bind(this));\n      this.get(\"/categories/:categoryId\", getCategoryHandler.bind(this));\n\n      // coupons route (public)\n      this.get(\"/coupon\", getAllCouponsHandler.bind(this));\n\n      // cart routes (private)\n      this.get(\"/user/cart\", getCartItemsHandler.bind(this));\n      this.post(\"/user/cart\", addItemToCartHandler.bind(this));\n      this.post(\"/user/cart/:productId\", updateCartItemHandler.bind(this));\n      this.delete(\n        \"/user/cart/:productId\",\n        removeItemFromCartHandler.bind(this)\n      );\n\n      // wishlist routes (private)\n      this.get(\"/user/wishlist\", getWishlistItemsHandler.bind(this));\n      this.post(\"/user/wishlist\", addItemToWishlistHandler.bind(this));\n      this.delete(\n        \"/user/wishlist/:productId\",\n        removeItemFromWishlistHandler.bind(this)\n      );\n\n      // address routes (private)\n      this.get(\"/user/addresses\", getAllAddressesHandler.bind(this));\n      this.post(\"/user/address\", addNewAddressHandler.bind(this));\n      this.delete(\"/user/address/:addressId\", removeAddressHandler.bind(this));\n    },\n  });\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { makeServer } from \"./server\";\n\nimport{BrowserRouter} from \"react-router-dom\"\n// Call make Server\nmakeServer();\n\nReactDOM.render(\n<BrowserRouter>\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}